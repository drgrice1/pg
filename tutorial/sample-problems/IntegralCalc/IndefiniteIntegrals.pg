## DESCRIPTION
## Indefinite integrals
## ENDDESCRIPTION

## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(PGML tutorial 2015)
## Date(06/01/2015)
## Institution(Hope College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('integral calculus', 'indefinite integrals')

#:% name = Indefinite Integrals
#:% type = Sample
#:% subject = integral calculus
#:% categories = [antiderivatives]

#:% section = preamble
#: The macro PODLINK('parserFormulaUpToConstant.pl') will allow the entry of
#: formula with a general constant like the antiderivative.
DOCUMENT();

loadMacros(
    'PGstandard.pl',                'PGML.pl',
    'parserFormulaUpToConstant.pl', 'PGcourse.pl'
);

#:% section = setup
#: The specific antiderivative is an ordinary formula. When the `cmp` method is
#: called for this answer the `upToConstant` option will be passed to specify
#: that it be a formula evaluated up to a constant.
#:
#: For the general antiderivative the `FormulaUpToConstant` method provided by
#: PODLINK('parserFormulaUpToConstant.pl') is used.

# Specific antiderivative:  Marks correct e^x, e^x + pi, etc
$specific = Formula('e^x');

#  General antiderivative: Marks correct e^x + C, e^x + C - 3, e^x + K, etc.
$general = FormulaUpToConstant('e^x');

#:% section = statement
#: The option `upToConstant => 1` is passed to the `cmp` method for the first
#: answer rule to specify that the any answer that differs from the given answer
#: only by a constant is to be accepted.
#:
#: The second answer `$general` is created with `FormulaUpToConstant` which
#: means that an arbitrary additive constant must be included in the answer.
#: Any letter aside that is not a variable in the context or $e$ can be used to
#: represent the arbitrary constant.
BEGIN_PGML
a. Enter a specific antiderivative for [`e^x`]:
[_]{ $specific->cmp(upToConstant => 1) }{10}

b. Enter the most general antiderivative for [`e^x`]:
[_]{$general}{10}
END_PGML

#:% section = solution
BEGIN_PGML_SOLUTION
Solution explanation goes here.
END_PGML_SOLUTION

ENDDOCUMENT();
