## DESCRIPTION
## Answers can be entered in any order into answer blanks
## ENDDESCRIPTION

## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(PGML tutorial 2015)
## Date(06/01/2015)
## Institution(Hope College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('algebra', 'answers can be entered in any order')

#:% name = Unordered Answers
#:% type = Sample
#:% subject = [algebra, precalculus]
#:% categories = [answers]

#:% section = preamble
#: The macro PODLINK('unorderedAnswer.pl') must be loaded.
DOCUMENT();

loadMacros('PGstandard.pl', 'PGML.pl', 'unorderedAnswer.pl', 'PGcourse.pl');

#:% section = setup
#: The answers use the variables `x`, `y`, and `z`.  The variable `x` is already
#: in the default `Numeric` context, but `y` and `z` need to be added.
Context()->variables->add(y => 'Real', z => 'Real');

$a = random(2, 9);

$answer1 = Compute("x^$a");
$answer2 = Compute("y^$a");
$answer3 = Compute("z^$a");

#:% section = statement
BEGIN_PGML
Rewrite the following expression without parentheses. Simplify your answer as
much as possible.

[`(xyz)^{[$a]} =`] [_____] [`\cdot`] [_____] [`\cdot`] [_____]
END_PGML

#:% section = answer
#: The method `UNORDERED_ANS(checker1, checker2, ...)` is used to associate the
#: unordered answer evaluator with the answer rules defined in the problem. The
#: variable `$showPartialCorrectAnswers` is set to 0 to withhold feedback until
#: all answers are correct.
$showPartialCorrectAnswers = 0;

UNORDERED_ANS($answer1->cmp, $answer2->cmp, $answer3->cmp);

#:% section = solution
BEGIN_PGML_SOLUTION
Solution explanation goes here.
END_PGML_SOLUTION

ENDDOCUMENT();
