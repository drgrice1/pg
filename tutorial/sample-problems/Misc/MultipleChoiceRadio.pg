## DESCRIPTION
## Multiple choice template
## ENDDESCRIPTION

## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(PGML tutorial 2015)
## Date(06/01/2015)
## Institution(Hope College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('multiple choice', 'template')

#:% name = Multiple Choice with Radio Buttons
#:% type = [Sample, technique]
#:% categories = [multiple choice, misc]
#:% see_also = [MultipleChoicePopup.pg, MultipleChoiceCheckbox.pg, ManyMultipleChoice.pg]

#:% section = preamble color:blue
#: The macro PODLINK('parserRadioButtons.pl') is used for radio button answers.
DOCUMENT();

loadMacros('PGstandard.pl', 'PGML.pl', 'parserRadioButtons.pl', 'PGcourse.pl');

#:% section = setup
#: Call `RadioButtons` to create a radio button answer object. The format is
#:
#: ```{#constructor .perl}
#: RadioButtons([choices, ...], correct, options);
#: ```
#:
#: For more details see PODLINK('parserRadioButtons.pl').
#:
#: Setting the option `separator` to `$SPACE x 5` results in a horizontal
#: list of radio buttons.  Note that `$SPACE` should be used and not `&nbsp;` so
#: that this works in both html and hard copy.
$radio1 = RadioButtons(
    [ [ 'Red', 'Blue', 'Green' ], 'None of these' ],
    'Blue',    # correct answer
);

$radio2 = RadioButtons(
    [ [ 'Red', 'Blue', 'Green' ], 'None of these' ],
    2,         # correct answer as an index (starting at 0)
    separator => $SPACE x 5
);

#:% section = statement
BEGIN_PGML
My favorite color is

[_]{$radio1}

The same question with horizontal options:

My favorite color is [_]{$radio2}
END_PGML

#:% section = solution
#: The `correct_ans` method can be called to get the correct answer.
BEGIN_PGML_SOLUTION
The correct answer to the first is [$radio1->correct_ans].

The correct answer to the first is [$radio2->correct_ans].
END_PGML_SOLUTION

ENDDOCUMENT();
